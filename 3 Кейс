	
Кейс-задача 3.
Разработка простой веб-страницы с использованием HTML, CSS и JavaScript
 
- Создайте базовую HTML-структуру страницы с заголовком и основным контентом;
- Используя CSS, добавьте стили для создания привлекательного внешнего вида страницы;
- Реализуйте JavaScript-код для добавления интерактивности на странице, например, кнопки, которые изменяют содержимое страницы;
- Добавьте форму с валидацией ввода данных на клиентской стороне;
- Добавьте функционал сохранения данных, введенных пользователем, на серверную сторону с использованием PHP или другого выбранного вами языка серверной разработки.


 
HTML (index.html)
 
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Simple Web Page</title>
   <link rel="stylesheet" href="styles.css">
</head>
<body>
   <header>
       <h1>Welcome to My Simple Web Page</h1>
   </header>
   <main>
       <section>
           <h2>Interactive Content</h2>
           <button id="changeContentBtn">Change Content</button>
           <p id="content">Click the button to change this text.</p>
       </section>
 
       <section>
           <h2>User Form</h2>
           <form id="userForm" action="save_data.php" method="POST">
               <label for="name">Name:</label>
               <input type="text" id="name" name="name" required>
               <label for="email">Email:</label>
               <input type="email" id="email" name="email" required>
               <button type="submit">Submit</button>
           </form>
           <p id="formMessage"></p>
       </section>
   </main>
   <footer>
       <p>&copy; 2024 My Simple Web Page</p>
   </footer>
   <script src="script.js"></script>
</body>
</html>
 
 
CSS (styles.css)
 
body {
   font-family: Arial, sans-serif;
   margin: 0;
   padding: 0;
   background-color: #f4f4f9;
   color: #333;
}
 
header {
   background-color: #333;
   color: #fff;
   padding: 10px 20px;
   text-align: center;
}
 
main {
   padding: 20px;
   max-width: 800px;
   margin: 0 auto;
   background: #fff;
   border-radius: 8px;
   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}
 
section {
   margin-bottom: 20px;
}
 
button {
   background-color: #007BFF;
   color: #fff;
   padding: 10px 15px;
   border: none;
   border-radius: 4px;
   cursor: pointer;
   font-size: 16px;
}
 
button:hover {
   background-color: #0056b3;
}
 
form label {
   display: block;
   margin-bottom: 5px;
}
 
form input {
   width: 100%;
   padding: 8px;
   margin-bottom: 10px;
   border: 1px solid #ccc;
   border-radius: 4px;
}
 
 
JavaScript (script.js)
 
// Change content when the button is clicked
document.getElementById("changeContentBtn").addEventListener("click", () => {
   const content = document.getElementById("content");
   content.textContent = "The content has been changed!";
});
 
// Form validation and submission
document.getElementById("userForm").addEventListener("submit", (e) => {
   const name = document.getElementById("name").value.trim();
   const email = document.getElementById("email").value.trim();
   const message = document.getElementById("formMessage");
 
   if (name === "" || email === "") {
       e.preventDefault();
       message.textContent = "All fields are required!";
       message.style.color = "red";
   } else {
       message.textContent = "Form submitted successfully!";
       message.style.color = "green";
   }
});
 
 
PHP (save_data.php)
 
<?php
// Save user data to a file
if ($_SERVER["REQUEST_METHOD"] == "POST") {
   $name = htmlspecialchars($_POST['name']);
   $email = htmlspecialchars($_POST['email']);
 
   $data = "Name: $name, Email: $email" . PHP_EOL;
   file_put_contents("data.txt", $data, FILE_APPEND);
 
   echo "<h1>Data Saved Successfully!</h1>";
   echo "<p>Name: $name</p>";
   echo "<p>Email: $email</p>";
   echo '<a href="index.html">Go Back</a>';
}
?>
 
Результат:
1. HTML-страница:
Заголовок, раздел с интерактивным контентом и форма для ввода данных.
2. CSS:
Стили для создания современного внешнего вида.
3. JavaScript:
Реализована интерактивность: изменение текста и валидация формы.
4. PHP:
Данные из формы сохраняются в файл data.txt и выводятся пользователю после успешного сохранения.
Как запустить:
1. Создать структуру файлов:
/project/
 |-- index.html
 |-- styles.css
 |-- script.js
 |-- save_data.php
2. Поместить все файлы в одну папку.
3. Запустить локальный сервер (например, с помощью PHP: php -S localhost:8000).
4. Перейти в браузере по адресу http://localhost:8000/index.html.
 
 
